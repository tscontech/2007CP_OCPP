/*
 * MIPI PANEL Initialization Script
 *
 * Date            : 2021/8/9
 * Chip Type       : IT9860
 * Resolution      : 480x1280
 * Color format    : RGB565
 * PANEL interface : 24-bits
 * Build version   : PANEL initial script editor Ver. 0.0.0.361
 * SHA1 hash       : c6e6b2fe0bb748c7f2d2fb33a930d2024e922d83
 */

/* ************************************************* */
/*               Please don't remove!                */
/* ************************************************* */
/*@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@*/

/* ************************************************* */
/*               GPIO Mode0 Set/Clear                */
/* ************************************************* */
//GPIO65 RESET,GPIO64 STDBY
WRITE(0xD1000108, 0x00000003);    // GPIO[95:64] GPIO64, GPIO65 set dir output
WRITE(0xD1000110, 0x00000002);    // GPIO[95:64] GPIO65 clear
WRITE(0xD1000110, 0x00000001);    // GPIO[95:64] GPIO64 clear
Wait(2000);
WRITE(0xD100010C, 0x00000002);    // GPIO[95:64] GPIO65 set high
Wait(500);
WRITE(0xD100010C, 0x00000001);    // GPIO[95:64] GPIO64 set high
Wait(10);

// GPIO48:LCD power enable GPIO49: Backline
// WRITE(0xD1000088, 0x00030000);    // GPIO[63:32] GPIO48 GPIO49 set dir output
// WRITE(0xD1000080, 0x00030000);    // GPIO[63:32] GPIO48 GPIO49 set high
// WRITE(0xD10000EC, 0x00000000);    // GPIO[63:56]

/* ************************************************* */
/*    IT9860, MIPI Interface mode, Clock Setting     */
/* ************************************************* */
// LP
WRITE(0xD8000048, 0x0002C803);    // KESCCLK
// HS
WRITE(0xD8000028, 0x002AC801);    // DCLK
WRITE(0xD800004C, 0xC002C801);    // KDSICLK
WRITE(0xD8000044, 0x00280801);    // En_W20CLK(mipi ctrl),En_W21CLK(mipi phy)

/* ************************************************* */
/*              PLL3 ck3_n1, 0xD8000000              */
/* ************************************************* */
WRITE(0xD8000120, 0x20350C01);
WRITE(0xD8000124, 0x80000000);
WRITE(0xD8000124, 0xF3000000);
wait(220);                        // IDLE 220
WRITE(0xD8000124, 0x80000000);

// IO output mode
WRITE(0xD0000110, 0x0000000F);    // (0x0000000F DEFAULT VALUE)

/* ************************************************* */
/*          MIPI DPHY reg base: 0xD0D00000           */
/* ************************************************* */
// DataRateCLK=BYTECLK*8=KESCCLK*PLLNS*PLLF
// DataRateCLK=17.6666666666667*48/2=424
WRITE(0xD0D00000, 0x603E80E4);    // PLLNS=48, Pad Type=MIPI, [21:17]P/N SWAP
WRITE(0xD0D00004, 0x05008001);    // PLLMS=1, PLLF=1/8 (First, datarateclk change to slow)
WRITE(0xD0D0001C, 0x06200000);    // ESCCLK = BYTECLK/3
WRITE(0xD0D00000, 0x613E80E4);    // PLL ENABLE
WAIT(200);

WRITE(0xD0D00008, 0x50142803);    // [31:24] CLK-POST,  [23:16] CLK-PRE, [15:08] CLK-ZERO,[7:0] CLK-PREPARE
WRITE(0xD0D0000C, 0x05030A0A);    // [31:24] HS-PREPARE,[23:16] TLPX,    [15:08] CLK-EXIT,[7:0] CLK-TRAIL
WRITE(0xD0D00010, 0x010A0F15);    // [23:16] HS-EXIT,   [15:08] HS-TRAIL,[07:00] HS-ZERO
WRITE(0xD0D00014, 0x05030A04);
WRITE(0xD0D00018, 0x000053E8);

WRITE(0xD0D00004, 0x055E8001);    // CLKEN,DATAEN
WRITE(0xD0D00004, 0x055F8001);    // RESET
WAIT(1);

WRITE(0xD0D00004, 0x055E8001);    // normal
WRITE(0xD0D00000, 0x603E80E4);    // PLLNS=48, Pad Type=MIPI, [21:17]P/N SWAP
WRITE(0xD0D00004, 0x055E8041);    // normal,PLLF=1/2
WRITE(0xD0D00000, 0x613E80E4);    // PLL ENABLE
WAIT(200);

// Bandgap Trimming
WRITE(0xD0D00004, 0x055E80C1);    // [07]: calibration function enable
WRITE(0xD0D0001C, 0x06A00000);    // [23]: auto calibration enable
WRITE(0xD0D0001C, 0x07A00000);    // [24]: Bandgap:1; Calsel:0
WRITE(0xD0D00018, 0x080053E8);    // [27]: calibration start ON
WAIT(1000);                       // wait 100us~1000us
WRITE(0xD0D00018, 0x000053E8);    // [27]: calibration start OFF, [31:28]: calibration value
WRITE(0xD0D00004, 0x055E8041);    // [07]: calibration function disable

/* ************************************************* */
/*                       MIPI                        */
/* ************************************************* */
WRITE(0xD800004C, 0x0002C001);    // MIPI controller normal
wait(200);

/* ************************************************* */
/*               CTG initial value set               */
/* ************************************************* */
WRITE(0xD0000070, 0x00010300);    // ctg_reset_on
wait(1);                          // 1 Î¼s
WRITE(0xD0000070, 0x00000300);    // ctg_reset_off

/* ************************************************* */
/*    PANEL Setting (CPUIF FOR DBI), 0xd000_0000     */
/* ************************************************* */
WRITE(0xD0000004, 0x0F7F0410);    // CPUIF

/* ************************************************* */
/*          MIPI reg base: 0xd0c00000 (LP)           */
/* ************************************************* */
// ----------LP----------- //
WRITE(0xD0C00004, 0x000F020F);    // 0x6[7]=BLLP, +0x04[0]=EOTPGE
WRITE(0xD0C00010, 0x000F0000);
WRITE(0xD0C00014, 0x0000001B);
wait(200000);
// -------MIPI End-------- //

/* ************************************************* */
/*            Panel Reset (LP11 -> Reset)            */
/* ************************************************* */
// ------- INSERT GPIO SETTING -------- //    <USER DEFINED>

/* ************************************************* */
/*                   CPUIF Setting                   */
/* ************************************************* */
WRITE(0xD00000F4, 0x50413232);    // CSN,DCN,WRN,RDN
WRITE(0xD00000F8, 0x00000000);    // 8bit cmd, no sync data

// MIPI enable
WRITE(0xD0000230, 0x00000016);    // [0]:MIPI enable,[1]:HsyncValue,[2]:VsyncValue,[3]:DEValue
wait(10);                         // 10 £gs
WRITE(0xD0000230, 0x00000017);    // [0]:MIPI enable
wait(5);                          // 5 £gs

/* ************************************************* */
/*                MIPI Panel initial                 */
/* ************************************************* */
WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A0CD);    // cmd 0xCD
wait(1);
WRITE(0xD00000F0, 0x0000B0AA);    // data 0xAA
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A065);    // cmd 0x65
wait(1);
WRITE(0xD00000F0, 0x0000B008);    // data 0x08
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A03A);    // cmd 0x3A
wait(1);
WRITE(0xD00000F0, 0x0000B014);    // data 0x14
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A032);    // cmd 0x32
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00, BIST
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A036);    // cmd 0x36
wait(1);
WRITE(0xD00000F0, 0x0000B002);    // data 0x02
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A067);    // cmd 0x67
wait(1);
WRITE(0xD00000F0, 0x0000B082);    // data 0x82
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A069);    // cmd 0x69
wait(1);
WRITE(0xD00000F0, 0x0000B020);    // data 0x20
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A06D);    // cmd 0x6D
wait(1);
WRITE(0xD00000F0, 0x0000B001);    // data 0x01
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A068);    // cmd 0x68
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0000A053);    // cmd 0x53
wait(1);
WRITE(0xD00000F0, 0x0000B019);    // data 0x19
wait(1);
WRITE(0xD00000F0, 0x0000B017);    // data 0x17
wait(1);
WRITE(0xD00000F0, 0x0000B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0000B012);    // data 0x12
wait(1);
WRITE(0xD00000F0, 0x0000B012);    // data 0x12
wait(1);
WRITE(0xD00000F0, 0x0000B012);    // data 0x12
wait(1);
WRITE(0xD00000F0, 0x0000B013);    // data 0x13
wait(1);
WRITE(0xD00000F0, 0x0000B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0000B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0000B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x0000B00C);    // data 0x0C
wait(1);
WRITE(0xD00000F0, 0x0000B00A);    // data 0x0A
wait(1);
WRITE(0xD00000F0, 0x0000B00A);    // data 0x0A
wait(1);
WRITE(0xD00000F0, 0x0000B00C);    // data 0x0C
wait(1);
WRITE(0xD00000F0, 0x0000B00B);    // data 0x0B
wait(1);
WRITE(0xD00000F0, 0x0000B00C);    // data 0x0C
wait(1);
WRITE(0xD00000F0, 0x0000B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0000B007);    // data 0x07
wait(1);
WRITE(0xD00000F0, 0x0000B006);    // data 0x06
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0000A054);    // cmd 0x54
wait(1);
WRITE(0xD00000F0, 0x0000B019);    // data 0x19
wait(1);
WRITE(0xD00000F0, 0x0000B016);    // data 0x16
wait(1);
WRITE(0xD00000F0, 0x0000B014);    // data 0x14
wait(1);
WRITE(0xD00000F0, 0x0000B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0000B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0000B011);    // data 0x11
wait(1);
WRITE(0xD00000F0, 0x0000B013);    // data 0x13
wait(1);
WRITE(0xD00000F0, 0x0000B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0000B015);    // data 0x15
wait(1);
WRITE(0xD00000F0, 0x0000B010);    // data 0x10
wait(1);
WRITE(0xD00000F0, 0x0000B00B);    // data 0x0B
wait(1);
WRITE(0xD00000F0, 0x0000B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0000B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0000B00B);    // data 0x0B
wait(1);
WRITE(0xD00000F0, 0x0000B00B);    // data 0x0B
wait(1);
WRITE(0xD00000F0, 0x0000B00C);    // data 0x0C
wait(1);
WRITE(0xD00000F0, 0x0000B009);    // data 0x09
wait(1);
WRITE(0xD00000F0, 0x0000B007);    // data 0x07
wait(1);
WRITE(0xD00000F0, 0x0000B006);    // data 0x06
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A029);    // cmd 0x29
wait(1);
WRITE(0xD00000F0, 0x0000B010);    // data 0x10
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A02A);    // cmd 0x2A
wait(1);
WRITE(0xD00000F0, 0x0000B00C);    // data 0x0C
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A06C);    // cmd 0x6C
wait(1);
WRITE(0xD00000F0, 0x0000B081);    // data 0x81
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0000A055);    // cmd 0x55
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0000A056);    // cmd 0x56
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B00F);    // data 0x0F
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10390017);    // ct=39
wait(1);
WRITE(0xD00000F0, 0x0000A057);    // cmd 0x57
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A030);    // cmd 0x30
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A039);    // cmd 0x39
wait(1);
WRITE(0xD00000F0, 0x0000B011);    // data 0x11
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A033);    // cmd 0x33
wait(1);
WRITE(0xD00000F0, 0x0000B008);    // data 0x08
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A035);    // cmd 0x35
wait(1);
WRITE(0xD00000F0, 0x0000B025);    // data 0x25, 0x25 è¬è¸æ¥¹è???x27 è¹æ¥¹??
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A04F);    // cmd 0x4F
wait(1);
WRITE(0xD00000F0, 0x0000B03D);    // data 0x3D
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A04E);    // cmd 0x4E
wait(1);
WRITE(0xD00000F0, 0x0000B035);    // data 0x35
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A041);    // cmd 0x41
wait(1);
WRITE(0xD00000F0, 0x0000B035);    // data 0x35, vcom  3A
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A073);    // cmd 0x73
wait(1);
WRITE(0xD00000F0, 0x0000B030);    // data 0x30
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A074);    // cmd 0x74
wait(1);
WRITE(0xD00000F0, 0x0000B010);    // data 0x10
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A076);    // cmd 0x76
wait(1);
WRITE(0xD00000F0, 0x0000B040);    // data 0x40
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A077);    // cmd 0x77
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A028);    // cmd 0x28
wait(1);
WRITE(0xD00000F0, 0x0000B031);    // data 0x31
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A07C);    // cmd 0x7C
wait(1);
WRITE(0xD00000F0, 0x0000B080);    // data 0x80
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A02E);    // cmd 0x2E
wait(1);
WRITE(0xD00000F0, 0x0000B004);    // data 0x04, PWM
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A04C);    // cmd 0x4C
wait(1);
WRITE(0xD00000F0, 0x0000B080);    // data 0x80, VCSW1
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A047);    // cmd 0x47
wait(1);
WRITE(0xD00000F0, 0x0000B016);    // data 0x16, VGH  14
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A048);    // cmd 0x48
wait(1);
WRITE(0xD00000F0, 0x0000B06A);    // data 0x6A, VGL  63
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A050);    // cmd 0x50
wait(1);
WRITE(0xD00000F0, 0x0000B0C0);    // data 0xC0
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A078);    // cmd 0x78
wait(1);
WRITE(0xD00000F0, 0x0000B06E);    // data 0x6E
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A02D);    // cmd 0x2D
wait(1);
WRITE(0xD00000F0, 0x0000B031);    // data 0x31
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A063);    // cmd 0x63
wait(1);
WRITE(0xD00000F0, 0x0000B004);    // data 0x04
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10150017);    // ct=15
wait(1);
WRITE(0xD00000F0, 0x0000A04D);    // cmd 0x4D
wait(1);
WRITE(0xD00000F0, 0x0000B000);    // data 0x00
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);

WRITE(0xD00000EC, 0x00020000);    // Force CSN=0
wait(1);
WRITE(0xD0000230, 0x10050017);    // ct=05
wait(1);
WRITE(0xD00000F0, 0x0000A011);    // cmd 0x11
wait(1);
WRITE(0xD00000EC, 0x00030000);    // Force CSN=1
wait(1);
wait(120000);                        // delay 120000£gs

/* ************************************************* */
/*        PANEL Register Setting, 0xd000_0000        */
/* ************************************************* */
WRITE(0xD0000000, 0x00000070);    // DRAM mode, dclk, Falling latch
WRITE(0xD0000004, 0x0F7F0A60);    // SRC:RGB565, dst 24-bits
WRITE(0xD0000008, 0x050001E0);    // Layer1:W480xH1280
WRITE(0xD000000C, 0x000003C0);    // pitch=480 X 2=960
WRITE(0xD0000010, 0x00000000);    // baseA addr
WRITE(0xD0000014, 0x00000000);    // baseB addr
WRITE(0xD0000018, 0x00000000);    // baseC addr

/* ************************************************* */
/*                  Test Color Mode                  */
/* ************************************************* */
WRITE(0xD0000020, 0x000000FF);    // test color mode=0, None

/* ************************************************* */
/*                    CTG Setting                    */
/*    HS:24, HBP:60, HFP:60, VS:2, VBP:10, VFP:12    */
/* ************************************************* */
WRITE(0xD0000070, 0x00000307);    // enable ctg 0 1 2
WRITE(0xD0000074, 0x05180270);    // htotal=0x0270, vtotal=0x0518

//CTG0 (Hsync)
WRITE(0xD0000078, 0x20010270);    // set0,p1, line x=htotal,        y=1
WRITE(0xD000007C, 0x10010018);    // set1,p2       x=HOR.SYNC TIME, y=1
WRITE(0xD0000080, 0x00000000);    // set1,p3(0x0,0)
WRITE(0xD0000084, 0x00000000);    // set0,p4(0x0,0)

//CTG1 (Vsync)
WRITE(0xD0000088, 0x60010270);    // set0,p1 ,frame  x=htotal, y=1
WRITE(0xD000008C, 0x10030270);    // set1,p2         x=htotal, y=VER.SYNC TIME+1
WRITE(0xD0000090, 0x00000000);    // set1,p3(0x0,0)
WRITE(0xD0000094, 0x00000000);    // set0,p4(0x0,0)

//CTG2 (DE)
WRITE(0xD0000098, 0x100E0054);    // set1,p1, line
WRITE(0xD000009C, 0x250E0234);    // set0,p2 x=HOR.SYNC TIME+HBP+Hor. display area y=(VER.SYNC TIME+1)+VBP+1+Ver. display area
WRITE(0xD00000A0, 0x100E0054);    // set1,p3
WRITE(0xD00000A4, 0x250E0234);    // set0,p4

/* ************************************************* */
/*         MIPI reg base: 0xd0c00000   (HS)          */
/* ************************************************* */
//----------HS-----------//
WRITE(0xD0C00004, 0x004F028E);    // 0x6[7]=BLLP, +0x04[0]=EOTPGE
WRITE(0xD0C00008, 0x00640064);
WRITE(0xD0C00010, 0x000F0000);
WRITE(0xD0C00014, 0x0000003E);    // RGB666(0x1E),RGB888(0x3E)
WRITE(0xD0C00018, 0x00241019);    // +0x18[5:0]=CLWR
WRITE(0xD0C0001C, 0x00000000);    // 24-bits pixel
WRITE(0xD0C00020, 0x000001E0);    // HACT=480(0x01E0)
WRITE(0xD0C00028, 0x000005A0);    // 480*3(0x05A0)
// Write d0c0003c 000000ff f
WRITE(0xD0C00048, 0x00000005);    // +0x48[6]=HSE Pkt
// Write d0c00050 000006a0 f
WRITE(0xD0C00054, 0x00000000);    // HSS(4)+HSA*3+HSE(4)+HBP*3+4+HACT*3+2+HFP*3
WRITE(0xD0C00058, 0x00000010);
WRITE(0xD0C00080, 0x000A0002);    // VBP=10(0x0A), VSA=2(0x02)
WRITE(0xD0C00084, 0x0500000C);    // VACT=1280(0x500), VFP=12(0x0C)
WRITE(0xD0C00088, 0x02B40000);    // HBP=60*3(0x00B4), HSA=24*3(0x48)
WRITE(0xD0C0008C, 0x00000000);    // HFP=60*3(0x00B4)

WRITE(0xD0C00050, 0x00000000);    // pixel fifo threshold

wait(150);

// -------MIPI End-------- //

/* ************************************************* */
/*                   Enable PANEL                    */
/* ************************************************* */
WRITE(0xD000001C, 0x00000001);    // SyncEn
wait(1);                          // 1 £gs
WRITE(0xD000001C, 0x00000003);    // SyncEn DisplayEn
